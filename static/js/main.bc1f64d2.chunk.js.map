{"version":3,"sources":["logo.svg","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","target","onSubmit","preventDefault","newContact","post","console","log","history","push","EditContact","updateContact","match","params","put","Header","href","branding","About","NotFound","Test","title","body","fetch","then","response","json","completed","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bc1f64d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) =>\r\n{\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component\r\n{\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount()\r\n    {\r\n        const res = await axios.get('http://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({ contacts: res.data })\r\n    }\r\n\r\n    // .then(res => this.setState({\r\n    //     contacts: res.data\r\n    // }))\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n\r\n                {this.props.children}\r\n            </ Context.Provider>\r\n        )\r\n\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component\r\n{\r\n    state = {\r\n\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = e =>\r\n    {\r\n\r\n    }\r\n    onDeleteClick = async (id, dispatch) =>\r\n    {\r\n        await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`)\r\n\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    };\r\n\r\n    // \r\n    render()\r\n    {\r\n\r\n        const { id, name, email, phone } = this.props.contact;  //destructuring\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value =>\r\n                {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name} <i onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i>\r\n                                <i className=\"fas fa-times\" style={{\r\n                                    cursor: 'pointer', float: 'right', color:\r\n                                        'red'\r\n                                }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\" style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }}></i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email} </li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n\r\n                            </ul>) : null}\r\n\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                }\r\n            </Consumer>\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n\r\n\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component\r\n{\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                {\r\n                    const { contacts } = value\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {contacts.map(contact =>\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            )}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) =>\r\n{\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n                placeholder={placeholder} value={value} onChange={onChange} />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import { v4 as uuid } from 'uuid';\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component\r\n{\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            // id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('http://jsonplaceholder.typicode.com/users', newContact)\r\n\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n        console.log(this.state);\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    Add Contact\r\n                            </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Name\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type='email'\r\n                                            placeholder=\"Enter Email\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Phone\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n\r\n                                        />\r\n\r\n                                        <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n                }\r\n            </Consumer >\r\n        )\r\n\r\n    }\r\n}\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import { v4 as uuid } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component\r\n{\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n\r\n    }\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n        //clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render()\r\n    {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-header\">\r\n                                    Edit Contact\r\n                            </div>\r\n                                <div className=\"card-body\">\r\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                        <TextInputGroup\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            placeholder=\"Enter Name\"\r\n                                            value={name}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.name}\r\n\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            type='email'\r\n                                            placeholder=\"Enter Email\"\r\n                                            value={email}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.email}\r\n\r\n                                        />\r\n                                        <TextInputGroup\r\n                                            label=\"Phone\"\r\n                                            name=\"phone\"\r\n                                            placeholder=\"Enter Phone\"\r\n                                            value={phone}\r\n                                            onChange={this.onChange}\r\n                                            error={errors.phone}\r\n\r\n                                        />\r\n\r\n                                        <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n                }\r\n            </Consumer >\r\n        )\r\n\r\n    }\r\n}\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) =>\r\n{\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {props.branding}\r\n                </a>\r\n            </div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\"> <i className=\"fas fa-home\"></i>Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>Add </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-question\"></i>About </Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nHeader.defaultProps = { branding: 'My App' }\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nconst headingStyle = {\r\n    color: 'green',\r\n    fontSize: '50px'\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nexport default function About()\r\n{\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound()\r\n{\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404  </span> PAGE NOT FOUND</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist!</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component\r\n{\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n\r\n                title: data.title,\r\n                body: data.completed\r\n            }))\r\n\r\n    }\r\n\r\n\r\n\r\n    // componentWillMount()\r\n    // {\r\n    //     console.log('component will mount')\r\n    // }\r\n\r\n    // componentDidUpdate()\r\n    // {\r\n    //     console.log('component will mount')\r\n    // }\r\n\r\n    // UNSAFE_componentWillReceiveProps(nextProps, nextState)\r\n    // {\r\n    //     console.log('components receive')\r\n    // }\r\n\r\n    render()\r\n    {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React from 'react';\nimport logo from './logo.svg';\n// import './App.css';\nimport { Provider } from './context'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header'\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/test/Test'\n\nfunction App()\n{\n  return (\n    <Provider>\n      <Router >\n        <div className=\"App\">\n          < Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about/\" component={About} />\n              <Route exact path=\"/test/\" component={Test} />\n\n              <Route component={NotFound} />\n\n\n            </Switch>\n\n          </div>\n        </div>\n\n      </Router>\n\n    </Provider>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}